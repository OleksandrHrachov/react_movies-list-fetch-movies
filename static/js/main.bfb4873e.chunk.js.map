{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","request","url","a","fetch","then","res","ok","Error","status","statusText","json","response","Response","getMovie","title","FindMovie","addMovies","useState","titleForFind","setTitleForFind","errorHide","setErrorHide","isMatches","setIsMatches","newMovie","setNewMovie","loader","downloadedMovie","console","log","onSubmit","event","preventDefault","some","handleSubmit","htmlFor","value","type","id","placeholder","classNames","onChange","target","onClick","App","setMovies","film","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfb4873e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=3c56bad8&';\n\nconst request = async (url: string) => {\n  const response = await fetch(`${BASE_URL}${url}`)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} - ${res.statusText}`);\n      }\n\n      return res.json();\n    });\n\n  if (response.Response === 'False') {\n    return null;\n  }\n\n  return response;\n};\n\nexport const getMovie = (title: string): Promise<Movie> => {\n  return request(`t=${title}`);\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\ntype Props = {\n  movies: Movie[] | [],\n  addMovies: (film: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  movies,\n  addMovies,\n}) => {\n  const [titleForFind, setTitleForFind] = useState('');\n  const [errorHide, setErrorHide] = useState(true);\n  const [isMatches, setIsMatches] = useState(false);\n\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n\n  const loader = async (title: string) => {\n    const downloadedMovie = await getMovie(title);\n\n    if (!downloadedMovie) {\n      setErrorHide(false);\n    } else {\n      setErrorHide(true);\n    }\n\n    setNewMovie(downloadedMovie);\n    // eslint-disable-next-line\n    console.log(newMovie, downloadedMovie);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (newMovie) {\n      const result = movies.some((movie) => movie.imdbID === newMovie.imdbID);\n\n      if (!result) {\n        addMovies(newMovie);\n        setTitleForFind('');\n        setNewMovie(null);\n        setIsMatches(false);\n      } else {\n        setTitleForFind('');\n        setNewMovie(null);\n        setIsMatches(true);\n      }\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          handleSubmit(event);\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                value={titleForFind}\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={classNames('input', { 'is-danger': !errorHide })}\n                onChange={(event) => {\n                  setTitleForFind(event.target.value);\n                  setErrorHide(true);\n                  setIsMatches(false);\n                }}\n              />\n            </div>\n          </label>\n\n          {(!errorHide) && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => loader(titleForFind)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {(newMovie !== null) && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={newMovie} />\n        </div>\n      )}\n\n      {isMatches && <h2 className=\"find-movie__notification\">This movie is already on the list</h2>}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[] | []>([]);\n\n  const addMovies = (film: Movie) => {\n    setMovies((prevMovies) => ([...prevMovies, film]));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          addMovies={addMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}