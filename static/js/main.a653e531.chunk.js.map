{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","title","url","fetch","then","response","ok","Error","status","statusText","json","FindMovie","addMovies","isMatches","setIsMatches","useState","titleForFind","setTitleForFind","errorHide","setErrorHide","setMovie","loader","a","downloadedMovie","Response","console","log","onSubmit","event","preventDefault","handleSubmit","htmlFor","value","type","id","placeholder","classNames","onChange","target","onClick","App","setMovies","film","some","ReactDOM","render","document","getElementById"],"mappings":"+TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,+CCFRC,EAAW,SAACC,GACvB,OAZeC,EAYA,KAAD,OAAMD,GAXbE,MAAM,GAAD,OAHG,6CAGH,OAAeD,IACxBE,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UAPN,IAACR,GCWJS,EAA6B,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACjE,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEA,EAA0BJ,mBAAuB,MAAjD,mBAAO1B,EAAP,KAAc+B,EAAd,KAEMC,EAAM,uCAAG,WAAOpB,GAAP,eAAAqB,EAAA,sEACiBtB,EAASC,GAD1B,OAGoB,WAF3BsB,EADO,QAGOC,SAClBL,GAAa,GAEbA,GAAa,GAGfC,EAASG,GAETE,QAAQC,IAAIrC,EAAOkC,GAXN,2CAAH,sDAqBZ,OACE,qCACE,uBACEjC,UAAU,aACVqC,SAAU,SAACC,IAXI,SAACA,GACpBA,EAAMC,iBACNjB,EAAUvB,GACV4B,EAAgB,IAChBG,EAAS,MAQHU,CAAaF,IAHjB,UAME,sBAAKtC,UAAU,QAAf,UACE,wBAAOA,UAAU,QAAQyC,QAAQ,cAAjC,wBAEE,qBAAKzC,UAAU,UAAf,SACE,uBACE0C,MAAOhB,EACPiB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ7C,UAAW8C,IAAW,QAAS,CAAE,aAAclB,IAC/CmB,SAAU,SAACT,GACTX,EAAgBW,EAAMU,OAAON,OAC7Bb,GAAa,GACbL,GAAa,YAMlBI,GACD,mBAAG5B,UAAU,iBAAb,qDAOJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE2C,KAAK,SACL3C,UAAU,kBACViD,QAAS,kBAAMlB,EAAOL,IAHxB,4BASF,qBAAK1B,UAAU,UAAf,SACE,wBACE2C,KAAK,SACL3C,UAAU,oBAFZ,qCAUM,OAAVD,GAAqC,UAAnBA,EAAMmC,UAGxB,sBAAKlC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,OAIrBwB,GAAa,oBAAIvB,UAAU,2BAAd,mDCrGPkD,EAAgB,WAC3B,MAA4BzB,mBAAkB,IAA9C,mBAAOlB,EAAP,KAAe4C,EAAf,KACA,EAAkC1B,oBAAS,GAA3C,mBAAOF,EAAP,KAAkBC,EAAlB,KAeA,OACE,sBAAKxB,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CACEsB,UApBU,SAAC8B,GACM,UAAf,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMlB,YACO3B,EAAO8C,MAAK,SAACtD,GAAD,OAAWA,EAAMU,SAAW2C,EAAK3C,UAM1De,GAAa,IAHb2B,EAAU,GAAD,mBAAK5C,GAAL,CAAa6C,KACtB5B,GAAa,MAeXD,UAAWA,EACXC,aAAcA,UC3BxB8B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a653e531.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=3c56bad8&';\n\nconst request = (url: string) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const getMovie = (title: string): Promise<Movie> => {\n  return request(`t=${title}`);\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\ntype Props = {\n  addMovies: (film: Movie | null) => void,\n  isMatches: boolean,\n  setIsMatches: (arg: boolean) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovies, isMatches, setIsMatches }) => {\n  const [titleForFind, setTitleForFind] = useState('');\n  const [errorHide, setErrorHide] = useState(true);\n\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const loader = async (title: string) => {\n    const downloadedMovie = await getMovie(title);\n\n    if (downloadedMovie.Response === 'False') {\n      setErrorHide(false);\n    } else {\n      setErrorHide(true);\n    }\n\n    setMovie(downloadedMovie);\n    // eslint-disable-next-line\n    console.log(movie, downloadedMovie);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    addMovies(movie);\n    setTitleForFind('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          handleSubmit(event);\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                value={titleForFind}\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={classNames('input', { 'is-danger': !errorHide })}\n                onChange={(event) => {\n                  setTitleForFind(event.target.value);\n                  setErrorHide(true);\n                  setIsMatches(false);\n                }}\n              />\n            </div>\n          </label>\n\n          {(!errorHide) && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => loader(titleForFind)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {(movie === null || movie.Response === 'False') ? (\n        false\n      ) : (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n\n      {isMatches && <h2 className=\"find-movie__notification\">This movie is already on the list</h2>}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [isMatches, setIsMatches] = useState(false);\n\n  const addMovies = (film: Movie | null) => {\n    if (film?.Response === 'True') {\n      const result = movies.some((movie) => movie.imdbID === film.imdbID);\n\n      if (!result) {\n        setMovies([...movies, film]);\n        setIsMatches(false);\n      } else {\n        setIsMatches(true);\n      }\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovies={addMovies}\n          isMatches={isMatches}\n          setIsMatches={setIsMatches}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}